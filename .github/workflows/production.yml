name: Production Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types: [opened, synchronize, reopened, closed]
 
permissions:
  contents: write

jobs:
  # --------------------------------------------------------------------------------
  # Verifcica se o pull request está vindo da branch develop.
  # --------------------------------------------------------------------------------
  Validate-Pull-Request-to-Main:
    if: (github.event_name == 'pull_request') && 
        (github.base_ref == 'main' || github.ref_name == 'main')
    runs-on: ubuntu-latest
    steps:
      - name: Validate pull request origin
        run: |
          echo "Head branch (origin):  ${{ github.head_ref }}"
          echo "Base branch (target): ${{ github.base_ref }}"
          if [ "${{ github.head_ref }}" != "develop" ]; then
            echo "❌ Only pull request from 'develop' branch to 'main' is allowed."
            exit 1
          fi
          echo "✅ Valid pull request: develop → main"
  
  # --------------------------------------------------------------------------------
  # Faz o Checkout dos fontes, gera o os executáveis, gera o instalador e faz deploy
  # para o ambiente de produção.
  # --------------------------------------------------------------------------------
  Build-Deploy-to-Production:
    if: (github.event_name == 'push') &&
        (github.base_ref == 'main' || github.ref_name == 'main')
    runs-on: self-hosted
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Build Project
        shell: powershell
        run: .\build-main.bat
      
      - name: Build Production Installer
        shell: powershell
        run: |
          & "C:\Program Files (x86)\Inno Setup 6\ISCC.exe" "src\foundation\InnoSetup\duimp.iss"
      
      - name: Get the Installer Name
        id: get_installer
        shell: powershell
        run: |
          $file = Get-ChildItem -Path installers\duimp-*.exe | Sort-Object LastWriteTime -Descending | Select-Object -First 1
          echo "installer_name=$($file.Name)" >> $env:GITHUB_OUTPUT
          echo "installer_path=$($file.FullName)" >> $env:GITHUB_OUTPUT
      
      - name: Deploy to Production
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.get_installer.outputs.installer_name }}
          name: "Release Production - ${{ steps.get_installer.outputs.installer_name }}"
          draft: false
          prerelease: false
          files: |
            ${{ steps.get_installer.outputs.installer_path }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}