name: Build

on:
  # Gatilho para todas as atividades relevantes de pull request em main e develop
  pull_request:
    branches:
      - main
      - develop
    types: [opened, synchronize, reopened, closed]

# Define o shell padrão para todos os jobs neste workflow.
defaults:
  run:
    shell: bash

jobs:
  # --------------------------------------------------------------------
  # JOB DE DEBUG: Executa sempre para mostrar o contexto do evento.
  # --------------------------------------------------------------------
  debug-context:
    name: "🔍 Debug do Contexto do Evento"
    runs-on: self-hosted
    steps:
      - name: "Imprime o contexto 'github' completo em formato JSON"
        # Este comando agora será executado com bash, evitando erros de PowerShell.
        run: echo "${{ toJSON(github) }}"

  # --------------------------------------------------------------------
  # 1) Validação de PR (enquanto o PR de 'develop' para 'main' está aberto)
  # --------------------------------------------------------------------
  validate-main-pr:
    name: "🚨 Validação de PR (develop → main)"
    runs-on: self-hosted
    # Este job só executa em PRs ABERTOS que têm 'main' como destino.
    if: >
      github.event.action != 'closed' &&
      github.event.pull_request.base.ref == 'main'
    steps:
      - name: "Verifica se a origem do PR é 'develop'"
        # A sintaxe 'if' abaixo agora funcionará corretamente com bash.
        run: |
          echo "Base (destino) do PR: ${{ github.event.pull_request.base.ref }}"
          echo "Head (origem) do PR: ${{ github.event.pull_request.head.ref }}"
          if [ "${{ github.event.pull_request.head.ref }}" != "develop" ]; then
            echo "::error ::PR inválido! Pull requests para 'main' devem vir exclusivamente da branch 'develop'."
            exit 1
          else
            echo "✅ Validação de PR bem-sucedida."
          fi

  # ---------------------------------------------------------------
  # 2) Build Homologação (executa após merge para 'develop')
  # ---------------------------------------------------------------
  build-homologation:
    name: "🛠️ Build Homologação"
    runs-on: self-hosted
    # Este job só executa quando um PR é MERGADO na branch 'develop'.
    if: >
      github.event.action == 'closed' &&
      github.event.pull_request.merged == true &&
      github.event.pull_request.base.ref == 'develop'
    steps:
      - name: "Checkout da branch 'develop'"
        uses: actions/checkout@v4
      - name: "Publicando build de homologação"
        run: echo "🚀 Build de Homologação rodando após merge para 'develop'."

  # --------------------------------------------------------------------
  # 3) Build Produção (executa após merge de 'develop' para 'main')
  # --------------------------------------------------------------------
  build-production:
    name: "🚀 Build Produção"
    runs-on: self-hosted
    needs: validate-main-pr # Garante que a validação seja considerada
    # Este job só executa quando um PR de 'develop' é MERGADO na branch 'main'.
    if: >
      github.event.action == 'closed' &&
      github.event.pull_request.merged == true &&
      github.event.pull_request.base.ref == 'main' &&
      github.event.pull_request.head.ref == 'develop'
    steps:
      - name: "Checkout da branch 'main'"
        uses: actions/checkout@v4
      - name: "Publicando build de produção"
        run: echo "🚀 Build de Produção rodando após merge de 'develop' para 'main'."