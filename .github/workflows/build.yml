name: Build

on:
  pull_request:
    branches:
      - main
      - develop
    types: [opened, synchronize, reopened, closed]

  push:
    branches:
      - develop
      - main

jobs:
  # ---------------------------------------------------------
  # 1) Validação de PRs para main
  # ---------------------------------------------------------
  validate-main-pr:
    name: "🚨 Validação de PR develop → main"
    runs-on: self-hosted
    if: ${{ github.event_name == 'pull_request' && github.event.pull_request.base.ref == 'main' }}
    steps:
      - name: Checando origem do PR
        run: |
          echo "Base branch: ${{ github.event.pull_request.base.ref }}"
          echo "Head branch: ${{ github.event.pull_request.head.ref }}"
          if [ "${GITHUB_HEAD_REF}" != "develop" ]; then
            echo "::error ::PR inválido! Somente 'develop' → 'main' é permitido."
            exit 1
          fi

  # ---------------------------------------------------------
  # 2) Build de Homologação (merge em develop)
  # ---------------------------------------------------------
  build-homologation:
    name: "🛠️ Build Homologação"
    runs-on: self-hosted
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/develop' }}
    steps:
      - uses: actions/checkout@v4
      - name: Publicando build de homologação
        run: echo "🚀 Build Homologação rodando após merge em develop"

  # ---------------------------------------------------------
  # 3) Build de Produção (merge de develop → main)
  # ---------------------------------------------------------
  build-production:
    name: "🚀 Build Produção"
    runs-on: self-hosted
    needs: validate-main-pr
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    steps:
      - uses: actions/checkout@v4
      - name: Publicando build de produção
        run: echo "🚀 Build Produção rodando após merge de develop → main"