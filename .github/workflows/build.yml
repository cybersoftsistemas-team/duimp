name: Build

on:
  pull_request:
    branches:
      - develop
      - main
    types: [opened, synchronize, reopened, closed]
  push:
    branches:
      - develop
      - main

jobs:
  validate-main-pr:
    name: "üö® Valida√ß√£o de PR develop ‚Üí main"
    runs-on: self-hosted
    steps:
      - name: Check PR for correct source branch
        if: ${{ github.event_name == 'pull_request' && github.event.pull_request.base.ref == 'main' }}
        id: check
        run: |
          echo "Base branch: ${{ github.event.pull_request.base.ref }}"
          echo "Head branch: ${{ github.event.pull_request.head.ref }}"
          if [ "${GITHUB_HEAD_REF}" != "develop" ]; then
            echo "::error ::PR inv√°lido! Somente 'develop' ‚Üí 'main' permitido."
            echo "valid=false" >> $GITHUB_OUTPUT
            exit 1
          else
            echo "‚úÖ PR v√°lido"
            echo "valid=true" >> $GITHUB_OUTPUT

      - name: Comentar badge + checklist no PR
        if: ${{ github.event_name == 'pull_request' && github.event.pull_request.base.ref == 'main' }}
        uses: peter-evans/create-or-update-comment@v4
        with:
          token: ${{ secrets.COMMENT_PAT }} # PAT com permiss√£o repo
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ${{ steps.check.outputs.valid == 'true' && '
            <p align="center">
              <span style="font-size:18px; color:green;">‚úÖ <b>FLUXO OK</b>: PR est√° correto.</span>
            </p>' || '
            <p align="center">
              <span style="font-size:18px; color:red;">‚ùå <b>PR INV√ÅLIDO</b>: Somente PR de <code>develop</code> para <code>main</code> √© permitido.</span>
            </p>
            <p>Por favor, siga os passos abaixo para corrigir:</p>
            - [ ] Fa√ßa merge da sua branch para <code>develop</code> primeiro
            - [ ] Atualize seu PR se necess√°rio
            - [ ] Aguarde aprova√ß√£o para merge em <code>main</code>
            üöÄ Seguindo este fluxo garantimos builds seguros para produ√ß√£o.'}}

  build-homologation:
    name: "üõ†Ô∏è Build Homologa√ß√£o"
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Rodar build de homologa√ß√£o
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/develop' }}
        run: echo "Publicando build em ambiente de homologa√ß√£o"

  build-production:
    name: "üöÄ Build Produ√ß√£o"
    runs-on: self-hosted
    needs: validate-main-pr
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Rodar build de produ√ß√£o
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        run: |
          # S√≥ executar se o merge veio de develop
          LAST_COMMIT=$(git log -1 --pretty=%P)
          PARENT_BRANCH=$(git show -s --pretty=%P HEAD)
          echo "Executando build produ√ß√£o"
          echo "√öltimo merge veio de develop" # aqui voc√™ pode adicionar valida√ß√£o se quiser
